@page "/form-test2"
@using System.Runtime.Serialization

<h3>Form DataBind Test2</h3>


<EditForm Model="Model" OnValidSubmit="OnValidSubmit" FormName="user-input">

	<div class="row">
		<div class="col-md-3">
			<label>String input</label>
			<InputText class="form-control" @bind-Value="Model.StrFieldWrapper" />
		</div>
		<div class="col-md-3">
			<label>Integer input</label>

			<InputSelect class="form-select" @bind-Value=Model.IntFieldWrapper>
				<option value="0" selected></option>
				<option value="1">One</option>
				<option value="2">Two</option>
			</InputSelect>
		</div>


		<div class="row mt-2">
			<div class="col-auto">
				<button type="submit" class="btn btn-primary">Submit</button>
			</div>
		</div>
	</div>
</EditForm>

@code {

	private IEnumerable<int> values = Enumerable.Range(0, 5);
	[SupplyParameterFromForm(FormName = "user-input")]
	private SomeModel Model { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		Model ??= new();
	}

	private void OnValidSubmit()
	{
		Console.WriteLine($"Submitted: Str Field={Model.Nested.InternalModel?.StrField}");
		Console.WriteLine($"Submitted: Int Field={Model.Nested.InternalModel?.IntField}");
	}

	public class InternalModel
	{
		public string StrField { get; set; }
		public int IntField { get; set; }
	}

	public class NestedModel
	{
		public InternalModel InternalModel { get; set; }// optional, could be null, therefore bind to wrappers
	}

	public class SomeModel
	{
		[IgnoreDataMember]
		public NestedModel Nested { get; set; } //= new();


		public SomeModel()
		{
			Nested = new(); // allocate default
		}

		public string StrFieldWrapper
		{
			get => Nested.InternalModel?.StrField;

			set
			{
				// Nested is null, why? 
				// Because Blazor binds to all pub properties and values that are not in the form are set to default value=null by default
				if (Nested.InternalModel is null) 
					Nested.InternalModel = new();
				Nested.InternalModel.StrField = value;
			}
		}

		public int IntFieldWrapper
		{
			get => Nested.InternalModel?.IntField ?? -1;

			set
			{
				// Nested is null, why?
				// Because Blazor binds to all pub properties and values that are not in the form are set to default value=null by default
				if (Nested.InternalModel is null)
					Nested.InternalModel = new();
				Nested.InternalModel.IntField = value;
			}
		}
	}
}
